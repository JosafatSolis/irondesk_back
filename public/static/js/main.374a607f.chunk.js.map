{"version":3,"sources":["images/logo.png","images/playa.jpg","AppContext.js","services/baseUrl.js","services/loginService.js","components/Login.js","components/ErrorDialog.js","components/Modals_Forms/FormikFormTenant.js","components/Modals_Forms/ModalButtonTenant.js","components/Modals_Forms/FormikFormTicket.js","components/Modals_Forms/ModalButtonTicket.js","components/Navbar.js","components/TenantCard.js","components/TenantsContainer.js","services/tenantService.js","components/Timer.js","components/Modals_Forms/FormikFormActivity.js","components/Modals_Forms/ModalButtonActivity.js","components/TicketCard.js","services/ticketsService.js","components/TicketsContainer.js","components/Home.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","createContext","base_url","axios","defaults","withCredentials","login","data","console","log","post","logout","logo","require","playa","Login","state","credentials","handleChange","e","target","name","value","setState","handleSubmit","preventDefault","setUser","context","history","props","then","res","user","includes","role","push","tenant","_id","catch","reason","this","currentUser","style","backgroundImage","className","border","width","padding","src","alt","onSubmit","uk-icon","onChange","type","placeholder","backgroundColor","Component","contextType","ErrorDialog","touched","message","Yup","shape","required","code","min","ModalButton","validationSchema","description","FormikFormTicket","Consumer","createTicket","initialValues","values","setSubmitting","resetForm","tenantId","errors","handleBlur","isSubmitting","htmlFor","rows","id","onBlur","disabled","customStyles","content","top","left","right","bottom","height","transform","useState","modalIsOpen","setModalIsOpen","pathSplit","window","location","pathname","split","length","onClick","isOpen","onRequestClose","href","NavBar","currentPos","homePath","updateState","currentPath","lbl","startsWith","removeUser","lblRole","to","ModalButtonTicket","TenantCard","TenantsContainer","tenants","get","resp","map","key","dayjs","extend","relativeTime","Timer","params","tick","timerId","setInterval","clearInterval","h","String","parseInt","diff","reportDate","m","s","FormikFormActivity","addActivity","date","Date","activity","ticketId","TicketCard","assignVisible","status","tecnicianName","validateVisible","closeVisible","assignTecnician","updateTicketStatus","tenantCode","alignItems","justifyContent","display","textAlign","uk-leader","uk-accordion","format","activities","ModalButtonActivity","postNewTicket","ticket","patchTecnicianName","patch","postNewActivity","patchTicketStatus","TicketsContainer","tickets","match","getTicketsByTenantId","uk-filter","uk-filter-control","color","uk-scrollspy","Array","isArray","tecnicianUser","clientUser","lastName","email","issueDescription","internalNotes","closedDate","clientComments","Home","exact","path","component","Routes","App","JSON","parse","localStorage","getItem","lastUpdate","setItem","stringify","removeItem","now","Provider","AppWithRouter","withRouter","Boolean","hostname","UIkit","use","Icons","WithRouter","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.374a607f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a712b561.png\";","module.exports = __webpack_public_path__ + \"static/media/playa.94fe1a7a.jpg\";","import { createContext } from 'react';\n\nconst AppContext = createContext();\n\nexport default AppContext;","const isProduction = process.env.NODE_ENV === \"production\";\nexport const base_url = isProduction\n  ? \"http://irondesk.herokuapp.com/api\"\n  : \"http://localhost:3000/api\";\n","import axios from 'axios';\nimport { base_url } from './baseUrl';\naxios.defaults.withCredentials = true;\n\n// Regresan promesas, se debe enviar el objeto COMPLETO, no con destructuring\n\nexport const login = (data) => {\n    console.log(\"baseUrl:\", base_url);\n    return axios.post(`${base_url}/login`, data);\n}\n\nexport const logout = () => {\n    return axios.post(`${base_url}/login/logout`);\n}","import React, { Component } from \"react\";\r\nimport AppContext from \"../AppContext\";\r\nimport { login } from '../services/loginService';\r\n\r\nlet logo = require(\"../images/logo.png\");\r\nlet playa = require(\"../images/playa.jpg\")\r\n\r\n\r\n\r\nclass Login extends Component {\r\n  \r\n  static contextType = AppContext;\r\n\r\n    state={credentials:{} }\r\n\r\n    componentDidMount() {\r\n      const { history } = this.props;\r\n      const { _id, role, tenant } = this.context.currentUser;\r\n      if(_id) {\r\n      if([\"Admin\", \"Tecnician\"].includes(role)) {\r\n              history.push(\"/home/tenants\");\r\n      } else {\r\n          history.push(`/home/tickets/${tenant._id}`)\r\n      }\r\n      }\r\n  }\r\n    \r\n  handleChange = (e) => {\r\n    let { credentials } = this.state;\r\n    credentials = { ...credentials, [e.target.name]: e.target.value };\r\n    this.setState({ credentials });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Se extrae el método setUser del AppContext\r\n    const { setUser } = this.context;\r\n    const { credentials } = this.state;\r\n    const { history } = this.props;\r\n    // Mandamos llamar el servicio que regresa una promesa, que a su vez regrea un objeto res.data con el user dentro\r\n    login(credentials).then(res => {\r\n        // Extrae el usuario y lo asigna al context, mediante el método setUser\r\n        const { user } = res.data;\r\n        setUser(user);\r\n        // Cambia la página dependiendo del rol del usuario logueado:\r\n        if([\"Admin\", \"Tecnician\"].includes(user.role)) {\r\n             history.push(\"home/tenants\")\r\n        } else {\r\n            history.push(`home/tickets/${user.tenant._id}`)\r\n        }\r\n    }).catch(reason => console.log(\"Error\", reason))\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n     \r\n      <main>\r\n\r\n        <section style={{backgroundImage:`url(${playa})`}}\r\n          className=\"\r\n          uk-background-blend-luminosity\r\n          uk-background-primary  \r\n\r\n          uk-height-small uk-panel\r\n          uk-height-viewport \r\n          uk-background-blend-multiply \r\n          uk-background-cover\r\n\r\n          uk-flex \r\n          uk-flex-center \r\n          uk-flex-middle\" >  \r\n          \r\n          <article\r\n          className=\"uk-background-muted \"\r\n          style={{\r\n            border:\"solid 2px #f07e1c\",\r\n            width: \"1000px\",\r\n            padding: \"10px\"\r\n          }}>\r\n\r\n          <div className=\"uk-flex uk-flex-center uk-flex-middle uk-margin-large-left\">\r\n            <img src={logo} alt=\"company\" className=\"uk-margin\"/>\r\n  \r\n            <form \r\n              className=\"uk-form uk-width-1-2 uk-margin-large-top uk-margin-large-left\"\r\n              onSubmit={(e) => this.handleSubmit(e)}>\r\n                \r\n                {/* USERNAME: NOMBRE DE LA PERSONA */}\r\n                  <span\r\n                    uk-icon=\"icon: users; ratio: 2\" className=\"uk-margin-small-right\">\r\n                  </span>\r\n                  \r\n                  <input\r\n                    name=\"email\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    className=\"uk-width-1-2 uk-form-large uk-text-center\"\r\n                    style={{ border: \"solid 2px #f07e1c\" }}\r\n                  ></input>\r\n            \r\n                {/*PASSWORD A INTRODUCIR --> HACER EL POST */}\r\n              <div className=\"uk-form-password\">\r\n                <span uk-icon=\"icon: lock; ratio: 2\" className=\"uk-margin-small-right\"> </span>\r\n                <input\r\n                  name=\"password\"\r\n                  onChange={(e) => this.handleChange(e)}\r\n                  className=\"uk-margin-small-top uk-width-1-2 uk-form-large uk-text-center\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  style={{ border: \"solid 2px #f07e1c\" }}>\r\n                </input>\r\n                \r\n\r\n              </div>\r\n                {/* BOTON DE LOGIN PARA ENVIAR SOLICITUD*/}\r\n\r\n              <div className=\" uk-align-center \">\r\n                  <button\r\n                    className=\" uk-align-center uk-button uk-button-primary\"\r\n                    style={{backgroundColor:\"#f07e1c\" }}>\r\n                    Login\r\n                  </button>\r\n              </div>\r\n              \r\n            </form>\r\n            \r\n            </div>\r\n          </article>\r\n        </section>\r\n     \r\n      </main>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\"\r\n\r\nconst ErrorDialog = ({touched, message}) =>{\r\n\r\n    if (!touched) {return <div className=\"uk-form-danger\"> &nbsp; </div>}\r\n    if (message) {return <div className=\"uk-form-danger\"> {message} </div>}\r\n\r\n    return <div className= \"uk-form-success\"> <span uk-icon=\"icon: check\"></span>\r\n\r\n    </div>\r\n}\r\n\r\nexport default ErrorDialog","import React from 'react';\r\nimport {Formik} from \"formik\" // Es una libreria de React que facilita el manejo de formularios\r\nimport * as Yup from \"yup\"    //libreria para validar el formulario \r\nimport ErrorDialog from \"../ErrorDialog\"\r\n\r\n\r\n\r\n// VALIDACIONES --> las vamos a definir usando YUP como si fuera un SCHEMA de base de datos\r\n\r\n\r\nconst validationSchema = Yup.object().shape(  {\r\n    name: Yup.string()\r\n    .required(\"¿Qué cliente eres?\"),\r\n\r\n    code: Yup.string()\r\n    .required(\"Debes incluir un código\")\r\n    .min(2, \"Por lo menos dos caracteres\"),\r\n})\r\n\r\n////////////FORMULARIO\r\n\r\nexport default function FormikFormTenant (){\r\n   \r\n    return (\r\n    <div>\r\n     <Formik\r\n        //aqui estan los valores del formulario (Schemas)\r\n        \r\n        initialValues= { {name: \"\", code:\"\" }}\r\n        validationSchema={validationSchema}\r\n        onSubmit= { \r\n        (values, {setSubmitting, resetForm} )=>{\r\n           setSubmitting(true)\r\n           // usamos setTime out como si fuera un post a servidor para corroborar que se envía\r\n           setTimeout(  ()=>{\r\n               alert(JSON.stringify(values, null, 2));\r\n               resetForm();\r\n               setSubmitting(false)\r\n           }, 500)\r\n        }}\r\n        >\r\n            {\r\n             ({values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting}  )=>(\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                <div>\r\n                    <label htmlFor=\"name\"> Nombre:           </label>\r\n                    <input \r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"Escribe tu nombre\"  \r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                    className={touched.name && errors.name ? \"uk-form-danger uk-text-secondary uk-text-center uk-input\" : \"uk-form-success uk-text-secondary uk-text-center uk-input\"}\r\n                    />\r\n\r\n                    <ErrorDialog\r\n                    touched={touched.name}\r\n                    message={errors.name}\r\n                    /> \r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"code\"> Código:           </label>\r\n                    <input \r\n                    type=\"text\"\r\n                    name=\"code\"\r\n                    id=\"code\"\r\n                    placeholder=\"Introduce tu código\"  \r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.code}\r\n                    className={touched.code && errors.code ? \"uk-form-danger uk-text-secondary uk-text-center uk-input\" : \"uk-form-success uk-text-secondary uk-text-center uk-input\"}\r\n                    />\r\n\r\n                    <ErrorDialog\r\n                    touched={touched.code}\r\n                    message={errors.code}\r\n                    /> \r\n                </div>\r\n\r\n                <div className=\"uk-submit\">\r\n                    <button \r\n                    \r\n                    type=\"submit\"\r\n                    disabled={isSubmitting} // no se pueda apretar mientras se sube}\r\n                    className=\"uk-button uk-button-primary uk-align-center\"\r\n                    >      AGREGAR CLIENTE          </button>\r\n                </div>\r\n\r\n\r\n                </form>\r\n                )}\r\n        \r\n    </Formik>\r\n    </div>\r\n\r\n    \r\n    )}\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport FormikFormTenant from \"./FormikFormTenant\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"25%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    width: \"30%\",\r\n    height: \"45%\",\r\n    transform: \"translate(-40%, -20%)\",\r\n    border: \"solid 1px #f07e1c\",\r\n  },\r\n};\r\n\r\nfunction ModalButton() {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  return (\r\n    <section\r\n      className=\"uk-margin-top uk-text-center\">\r\n      {/*BOTON QUE ABRE EL MODAL */}\r\n\r\n      <button\r\n        style={{ backgroundColor: \"#E5E4E2\" }}\r\n        className=\"uk-button \"\r\n        onClick={() => { setModalIsOpen(true); }}>\r\n        Nuevo Cliente [+]\r\n      </button>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={() => { setModalIsOpen(false); }}\r\n        style={customStyles}>\r\n\r\n        <div>\r\n          <button\r\n            href=\"#\"\r\n            onClick={() => {\r\n              setModalIsOpen(false);\r\n            }}\r\n            className=\"uk-button-muted uk-align-right\">\r\n            <span uk-icon=\"icon: close\"> </span>\r\n          </button>\r\n\r\n          <br />\r\n        </div>\r\n\r\n        <br/>\r\n        <FormikFormTenant />\r\n\r\n      </Modal>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ModalButton;\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\"; // Es una libreria de React que facilita el manejo de formularios\r\nimport * as Yup from \"yup\"; //libreria para validar el formulario\r\nimport ErrorDialog from \"../ErrorDialog\";\r\nimport AppContext from \"../../AppContext\";\r\n\r\n// VALIDACIONES --> las vamos a definir usando YUP como si fuera un SCHEMA de base de datos\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  description: Yup.string()\r\n    .min(50, \"Describe con mayor detalle...\")\r\n    .required(\"Dinos cuál es el problema\"),\r\n});\r\n\r\n////////////FORMULARIO\r\n\r\nexport default function FormikFormTicket(props) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {(value) => {\r\n        const { createTicket } = value;\r\n        return (\r\n          <div>\r\n            <Formik\r\n              //aqui estan los valores del formulario (Schemas)\r\n              initialValues={{ description: \"\" }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                setSubmitting(true);\r\n                const { description } = values;\r\n                setSubmitting(false);\r\n                resetForm();\r\n                createTicket(description, props.tenantId);\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div>\r\n                    <label htmlFor=\"description\"> Problema: </label>\r\n                    <textarea\r\n                      rows=\"6\"\r\n                      placeholder=\"Describe a detalle el problema...\"\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                      id=\"description\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.description}\r\n                      className={\r\n                        touched.description && errors.description\r\n                          ? \"uk-form-danger uk-text-secondary uk-text-center uk-input\"\r\n                          : \" uk-form-success uk-text-secondary uk-text-center uk-input\"\r\n                      }\r\n                    ></textarea>\r\n\r\n                    <ErrorDialog\r\n                      touched={touched.description}\r\n                      message={errors.description}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"uk-submit\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting} // no se pueda apretar mientras se sube}\r\n                      className=\"uk-button uk-button-primary uk-align-center\"\r\n                    >\r\n                      {\" \"}\r\n                      LEVANTAR TICKET{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        );\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport FormikFormTicket from \"./FormikFormTicket\";\r\nimport AppContext from \"../../AppContext\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"25%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    width: \"40%\",\r\n    height: \"50%\",\r\n    transform: \"translate(-40%, -20%)\",\r\n    border: \"solid 1px #f07e1c\",\r\n  },\r\n};\r\n\r\nfunction ModalButton() {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  return (\r\n    <AppContext.Consumer>\r\n      {(value) => {\r\n        const pathSplit = window.location.pathname.split(\"/\");\r\n        let tenantId = pathSplit[pathSplit.length - 1];\r\n        tenantId = [\"tenants\", \"tickets\", \"home\"].includes(tenantId) ? null : tenantId;\r\n        return !tenantId ? null : (\r\n          <section className=\"uk-margin-top uk-text-center \">\r\n            <button\r\n              style={{ backgroundColor: \"#E5E4E2\" }}\r\n              className=\"uk-button\"\r\n              onClick={() => {\r\n                setModalIsOpen(true);\r\n              }}\r\n            >\r\n              NUEVO TICKET [+]\r\n            </button>\r\n\r\n            <Modal\r\n              isOpen={modalIsOpen}\r\n              onRequestClose={() => {\r\n                setModalIsOpen(false);\r\n              }}\r\n              style={customStyles}\r\n            >\r\n              <div>\r\n                <button\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    setModalIsOpen(false);\r\n                  }}\r\n                  className=\"uk-button-muted uk-align-right\"\r\n                >\r\n                  <span uk-icon=\"icon: close\"> </span>\r\n                </button>\r\n                <br />\r\n              </div>\r\n\r\n              <br />\r\n              <FormikFormTicket tenantId={tenantId} />\r\n            </Modal>\r\n          </section>\r\n        );\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default ModalButton;\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AppContext from \"../AppContext\";\nimport ModalButtonTenant from \"./Modals_Forms/ModalButtonTenant\";\nimport ModalButtonTicket from \"./Modals_Forms/ModalButtonTicket\";\n\nexport default class NavBar extends Component {\n  static contextType = AppContext;\n\n  state = {currentPos: \"\",\n          homePath: \"/home\" };\n\n  updateState = () => {\n    // Ajusta homePath\n    const { currentUser } = this.context;\n    if ([\"Admin\", \"Tecnician\"].includes(currentUser.role)) {\n      this.setState({ homePath: \"/home/tenants\" });\n    } else {\n      this.setState({ homePath: `/home/tickets/${currentUser.tenant._id}` });\n    }\n    // Ajusta currentPos\n    const currentPath = window.location.pathname;\n    const lbl =\n      currentPath === this.state.homePath\n        ? \"\"\n        : currentPath.startsWith(\"/home/tenants\")\n          ? \"\"\n          : \"TICKETS\";\n    this.setState({ currentPos: lbl });\n  };\n\n  componentDidMount() {\n    this.updateState();\n  }\n\n  render() {\n    const { removeUser, currentUser } = this.context;\n    const lblRole = (currentUser.role === \"User\" ? \"Usuario\" : (currentUser.role === \"Admin\" ? \"Administrador\" : \"Técnico\" ));\n    return (\n\n      <nav className=\"uk-navbar-container uk-navbar\" >\n        <section className=\"uk-navbar-left\">\n          <ul className=\"uk-navbar-nav\" >\n            <li className=\"uk-margin-right uk-margin-left\">\n              <Link onClick={() => this.updateState()} to={this.state.homePath}>\n                Home\n              </Link>{\" \"}\n            </li>\n\n            <li className=\"uk-button \">\n              <ModalButtonTicket />\n            </li>\n\n          </ul>\n        </section>\n\n        <section className=\"uk-navbar-right\">\n          <ul className=\"uk-navbar-nav\">\n              <li>\n              <Link to=\"#\" onClick={() => this.updateState()}>\n                {`Bienvenido ${this.context.currentUser.name} (${this.context.currentUser.tenant.code})`} <br/> {lblRole}\n              </Link>{\" \"}\n              </li>\n            <li>\n              <Link to=\"#\" onClick={() => removeUser()}>\n                Logout\n              </Link>{\" \"}\n              {/* Al hacer clic post para logout */}\n            </li>\n          </ul>\n        </section>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class TenantCard extends Component {\n  render() {\n    return (\n      <article\n       \n        className=\"\n        uk-card \n        uk-card-default\n        uk-flex\n        uk-flex-around\n        uk-margin\n        uk-margin-top \"\n      >\n\n        <Link to={`/home/tickets/${this.props.tenantId}`}>\n          <h4 className=\"uk-card-title uk-margin-top\">\n            <strong>{this.props.code} - {this.props.name}</strong>\n          </h4>\n          <div className=\"uk-card-body\"> Ver Tickets </div>\n        </Link>\n\n      </article>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TenantCard from \"./TenantCard\";\nimport { getTenants } from \"../services/tenantService\";\n\nexport default class TenantsContainer extends Component {\n  state = {tenants: []  };\n\n  componentDidMount() {\n    // Si no tiene un tenant en particular, recupera de todos\n    getTenants()\n      .then((resp) => {\n        const { data: tenants } = resp;\n        this.setState({ tenants });\n      })\n      .catch((reason) => console.log(\"Error: \", reason));\n  }\n\n  render() {\n    return (\n\n        \n        <section className=\"\n          uk-margin-left\n          uk-margin-right\n         \n          uk-grid\n        \n          uk-flex-wrap-around\n          \n          uk-child-width-1-1 \n          uk-child-width-1-2@s \n          uk-child-width-1-3@m\">\n          \n          {this.state.tenants.map((tenant) => { return (\n              <TenantCard\n                tenantId={tenant._id}\n                name={tenant.name}\n                code={tenant.code}\n                key={tenant._id}\n              />  )\n          } )}\n        </section>\n       \n    );\n  }\n}\n","import axios from 'axios';\nimport { base_url } from './baseUrl';\n\nexport const getTenants = () => {\n    return axios.get(`${base_url}/tenants`);\n}","import React, { Component } from \"react\";\nimport dayjs from \"dayjs\";\nimport relativeTime from 'dayjs/plugin/relativeTime';\ndayjs.extend(relativeTime);\n\nexport default class Timer extends Component {\n    state = {\n        tick: false,\n        timerId: 0\n    }\n\n    constructor(params) {\n        super(params);\n        this.timerId =  setInterval(() => {\n            this.setState({tick: !this.state.tick});\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId);\n    }\n\n    render() {\n        let h = String(parseInt(dayjs().diff(dayjs(this.props.reportDate),\"hour\")) % 24);\n        let m = String(parseInt(dayjs().diff(dayjs(this.props.reportDate),\"minute\")) % 60);\n        let s = String(parseInt(dayjs().diff(dayjs(this.props.reportDate),\"second\")) % 60);\n        h = (h.length < 2) ? \"0\" + h : h;\n        m = (m.length < 2) ? \"0\" + m : m;\n        s = (s.length < 2) ? \"0\" + s : s;\n    return (\n        <div className=\"uk-heading-small\">\n          <span uk-icon=\"clock\"></span>\n          {\n           dayjs().diff(dayjs(this.props.reportDate),\"day\") +\n           'd ' + h + \":\" + m + \":\" + s}\n        </div>\n    )\n  }\n}","import React from \"react\";\r\nimport { Formik } from \"formik\"; // Es una libreria de React que facilita el manejo de formularios\r\nimport * as Yup from \"yup\"; //libreria para validar el formulario\r\nimport ErrorDialog from \"../ErrorDialog\";\r\nimport AppContext from \"../../AppContext\";\r\n\r\n// VALIDACIONES --> las vamos a definir usando YUP como si fuera un SCHEMA de base de datos\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\r\n  description: Yup.string()\r\n    .min(50, \"Por favor incluya más información...\")\r\n    .required(\"Cuéntanos qué problema tienes\"),\r\n});\r\n\r\n////////////FORMULARIO\r\n\r\nexport default function FormikFormActivity(props) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {(value) => {\r\n        const { addActivity } = value;\r\n        return (\r\n          <div>\r\n            <Formik\r\n              //aqui estan los valores del formulario (Schemas)\r\n              initialValues={{ date: new Date(), description: \"\" }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                setSubmitting(true);\r\n                const { date, description: activity } = values;\r\n                setSubmitting(false);\r\n                resetForm();\r\n                addActivity(props.ticketId, {date, activity});\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n              }) => (\r\n                <form className=\"uk-form\" onSubmit={handleSubmit}>\r\n                  <div>\r\n                    <label htmlFor=\"description\"> Descripción: </label>\r\n                    <textarea\r\n                      rows=\"6\"\r\n                      placeholder=\"Describe la(s) tarea(s) realizada(s)...\"\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                      id=\"description\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.description}\r\n                      className={\r\n                        touched.description && errors.description\r\n                          ? \"uk-form-danger uk-text-secondary uk-text-center uk-input\"\r\n                          : \" uk-form-success uk-text-secondary uk-text-center uk-input\"\r\n                      }\r\n                    ></textarea>\r\n\r\n                    <ErrorDialog\r\n                      touched={touched.description}\r\n                      message={errors.description}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"uk-submit\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting} // no se pueda apretar mientras se sube}\r\n                      className=\"uk-button uk-button-primary uk-align-center\"\r\n                    >\r\n                      {\" \"}\r\n                      AGREGAR ACTIVIDAD{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        );\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport FormikFormActivity from \"./FormikFormActivity\";\r\nimport AppContext from \"../../AppContext\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"25%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    width: \"40%\",\r\n    height: \"30%\",\r\n    transform: \"translate(-40%, -20%)\",\r\n    border: \"solid 1px #f07e1c\",\r\n  },\r\n};\r\n\r\nfunction ModalButton(props) {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  return (\r\n    <AppContext.Consumer>\r\n      {(value) => {\r\n        return (\r\n          <section className=\"uk-margin-top uk-text-center \">\r\n            <button\r\n              uk-icon=\"icon: plus-circle\"\r\n              onClick={() => {\r\n                setModalIsOpen(true);\r\n              }}\r\n            ></button>\r\n\r\n            <Modal\r\n              isOpen={modalIsOpen}\r\n              onRequestClose={() => {\r\n                setModalIsOpen(false);\r\n              }}\r\n              style={customStyles}\r\n            >\r\n              <div>\r\n                <button\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    setModalIsOpen(false);\r\n                  }}\r\n                  className=\"uk-button-muted uk-align-right\"\r\n                >\r\n                  <span uk-icon=\"icon: close\"> </span>\r\n                </button>\r\n                <br />\r\n              </div>\r\n\r\n              <br />\r\n              <FormikFormActivity ticketId={props.ticketId} />\r\n            </Modal>\r\n          </section>\r\n        );\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default ModalButton;\r\n","import React, { Component } from \"react\";\nimport AppContext from \"../AppContext\";\nimport Timer from \"./Timer\";\nimport ModalButtonActivity from \"./Modals_Forms/ModalButtonActivity\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\ndayjs.extend(relativeTime);\n\nexport default class TicketCard extends Component {\n  static contextType = AppContext;\n\n  assignVisible = () => {\n    return (\n      this.props.status !== \"Closed\" &&\n      [\"Admin\", \"Tecnician\"].includes(this.context.currentUser.role) &&\n      !this.props.tecnicianName\n    );\n  };\n\n  validateVisible = () => {\n    return (\n      [\"Admin\", \"Tecnician\"].includes(this.context.currentUser.role) &&\n      this.props.tecnicianName &&\n      this.props.status === \"Open\"\n    );\n  };\n\n  closeVisible = () => {\n    return (\n      [\"Admin\", \"User\"].includes(this.context.currentUser.role) &&\n      this.props.status === \"ClosingRequested\"\n    );\n  };\n\n  render() {\n    const { assignTecnician, updateTicketStatus } = this.context;\n    const assignVisible = this.assignVisible();\n    const validateVisible = this.validateVisible();\n    const closeVisible = this.closeVisible();\n    return (\n      <section className=\"\n      uk-card \n      uk-card-default \n      uk-flex\n      uk-flex-around\n      uk-margin-top\">\n      <div className=\"uk-card-body \">\n        {/* Encabezado con badges e íconos */}\n\n        <section className=\"uk-grid uk-flex-around \">\n          <article>\n            <div\n              className={\n                this.props.status === \"Open\"\n                  ? \"uk-label-danger\"\n                  : this.props.status === \"ClosingRequested\"\n                  ? \"uk-label-warning\"\n                  : \"uk-label-success\"\n              }\n            >\n              {this.props.status === \"Open\"\n                ? \"Abierto\"\n                : this.props.status === \"ClosingRequested\"\n                ? \"Validar\"\n                : \"Cerrado\"}\n            </div>\n          </article>\n\n          <article>\n            <ul className=\"uk-iconnav\">\n              <li>\n                {\" \"}\n                <button href=\"#\" uk-icon=\"icon: file-edit\"></button>{\" \"}\n              </li>\n              <li>\n                {\" \"}\n                <button href=\"#\" uk-icon=\"icon: trash\"></button>{\" \"}\n              </li>\n            </ul>\n          </article>\n\n          <article>\n            <div className=\"uk-label\">{this.props.tenantCode}</div>\n          </article>\n        </section>\n\n        {/* Timer actualizado en tiempo real */}\n        {this.props.status === \"Closed\" ? null : (\n          <Timer reportDate={this.props.reportDate} />\n        )}\n        {/* Labels Asignado a .... X */}\n\n        <section\n          className=\"uk-flex uk-flex-center uk-flex-column uk-child-width-1-1\"\n          style={{ alignItems: \"start\", justifyContent: \"flex-end\" }}\n        >\n          <article style={{ display: \"flex\", textAlign: \"initial\" }}>\n            <div className=\"uk-width-expand\" uk-leader=\"\">\n              <span uk-icon=\"users\"></span>\n              <span className=\"uk-margin\">Asignado a</span>\n            </div>\n            <div className=\"uk-margin-small-left\">\n              {this.props.tecnicianName}\n            </div>{\" \"}\n            <hr />\n          </article>\n\n          {/* Descripción colapsable */}\n          <article className=\"container-fluid\" style={{ textAlign: \"initial\" }}>\n            <ul uk-accordion=\"multiple: true\">\n              <li className=\"uk-closed\">\n                <button className=\"uk-accordion-title uk-button uk-button-muted uk-width-1-1\">\n                  Descripción\n                </button>\n\n                <div className=\"uk-accordion-content\">\n                  <article className=\"uk-comment uk-comment-primary uk-margin\">\n                    <header className=\"uk-comment-header uk-grid-medium uk-flex-middle\">\n                      <div className=\"uk-width-expand\">\n                        <h6 className=\"uk-comment-title uk-margin-remove\">\n                          <span uk-icon=\"user\"></span>{\" \"}\n                          <span>{this.props.user}</span>\n                        </h6>\n\n                        <span>\n                          {\" \"}\n                          {dayjs(this.props.reportDate).format(\n                            \"D/MM/YYYY h:mm a\"\n                          )}{\" \"}\n                        </span>\n                      </div>\n                    </header>\n\n                    <div className=\"uk-comment-body uk-text-justify\">\n                      {\" \"}\n                      <p>{this.props.description}</p>{\" \"}\n                    </div>\n                  </article>\n                </div>\n              </li>\n            </ul>\n          </article>\n\n          {/* Actividades colapsables */}\n          <section className=\"container-fluid\" style={{ textAlign: \"initial\" }}>\n            <ul uk-accordion=\"multiple: true\">\n              <li className=\"uk-closed\">\n                <button className=\"uk-accordion-title uk-button uk-button-muted uk-width-1-1\">\n                  Actividades\n                </button>\n\n                <div className=\"uk-accordion-content\">\n                  <article className=\"uk-overflow-auto uk-height-small uk-width-max uk-width-auto\">\n                    <table className=\"uk-table uk-table-striped\">\n                      <thead>\n                        <tr>\n                          <th>Fecha</th>\n                          <th>Actividades</th>\n                        </tr>\n                      </thead>\n\n                      <tbody>\n                        {this.props.activities.map((activity) => (\n                          <tr key={activity._id}>\n                            <td>{dayjs(activity.date).format(\"D/MM H:mm\")}</td>\n                            <td>{activity.activity}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </article>\n                  {this.props.status === \"Closed\" ? null : (\n                    <article>\n                      <ul className=\"uk-iconnav uk-align-right\">\n                        <li className=\"uk-margin-small-top\">\n                          <ModalButtonActivity ticketId={this.props.ticketId} />\n                        </li>\n                      </ul>\n                    </article>\n                  )}\n                </div>\n              </li>\n            </ul>\n          </section>\n          {/* Botones Cerrar / Validar */}\n          <div className=\"uk-grid uk-flex-around\">\n            {!assignVisible ? null : (\n              <div className=\"uk-align-center\">\n                <button\n                  className=\"uk-button uk-button-default\"\n                  onClick={() => assignTecnician(this.props.ticketId)}\n                >\n                  ATENDER\n                </button>\n              </div>\n            )}\n            {!validateVisible ? null : (\n              <div>\n                <button\n                  className=\"uk-button uk-button-default\"\n                  onClick={() =>\n                    updateTicketStatus(this.props.ticketId, {\n                      status: \"ClosingRequested\",\n                    })\n                  }\n                >\n                  Validar\n                </button>\n              </div>\n            )}\n            {!closeVisible ? null : (\n              <div>\n                <button\n                  className=\"uk-button uk-button-default\"\n                  onClick={() =>\n                    updateTicketStatus(this.props.ticketId, {\n                      status: \"Closed\",\n                    })\n                  }\n                >\n                  Cerrar\n                </button>\n              </div>\n            )}\n          </div>\n        </section>\n      </div>\n      </section>\n    );\n  }\n}\n","import axios from 'axios';\nimport { base_url } from './baseUrl';\n\nexport const getTickets = () => {\n    return axios.get(`${base_url}/tickets/`);\n}\n\nexport const getTicketsByTenantId = (tenantId) => {\n    return axios.get(`${base_url}/tickets/bytenant/${tenantId}`);\n}\n\nexport const getOpenTicketsCountByTenantId = (tenantId) => {\n    return axios.get(`${base_url}/tickets/bytenant/${tenantId}/open`);\n}\n\nexport const postNewTicket = (ticket) => {\n    return axios.post(`${base_url}/tickets/`, ticket);\n}\n\nexport const patchTecnicianName = (ticket) => {\n    return axios.patch(`${base_url}/tickets/${ticket._id}`, ticket)\n}\n\nexport const postNewActivity = (ticketId, activity) => {\n    return axios.post(`${base_url}/tickets/${ticketId}/newactivity`, activity)\n}\n\nexport const patchTicketStatus = (ticketId, status) => {\n    return axios.patch(`${base_url}/tickets/${ticketId}/statusupdate`, status)\n}","import React, { Component } from \"react\";\nimport TicketCard from \"./TicketCard\";\nimport { getTickets, getTicketsByTenantId } from \"../services/ticketsService\";\n\nexport default class TicketsContainer extends Component {\n  state = { tickets: [] };\n\n  componentDidMount() {\n    // Revisa si es de 1 tenant en particular\n    const { tenantId } = this.props.match.params;\n    // Si es de un tenant, recupera sólo de ese tenant\n    if (tenantId) {\n      getTicketsByTenantId(tenantId)\n        .then((resp) => {\n          const { data: tickets } = resp;\n          this.setState({ tickets });\n        })\n        .catch((reason) => console.log(\"Error: \", reason));} \n        \n    else {\n      // Si no tiene un tenant en particular, recupera de todos\n      getTickets()\n        .then((tickets) => {this.setState({ tickets });\n        })\n        .catch((reason) => console.log(\"Error: \", reason));\n        }}\n\n  render() {\n    return (\n\n      <section className=\"uk-section\">\n        <div uk-filter=\"target: .js-filter\">\n\n          {/* Filter Controls */}\n          <ul className=\"uk-margin-left uk-subnav uk-subnav-pill\">\n            \n            <li className=\"uk-active\" uk-filter-control=\"\">\n              <button\n                className=\"uk-button uk-button-muted\"\n                style={{ backgroundColor: \"black\", color: \"white\" }}>\n                Todos\n              </button>\n            </li>\n\n            <li uk-filter-control=\"[status='Open']\">\n              <button\n                style={{ backgroundColor: \"red\", color: \"white\" }}\n                className=\"uk-button uk-button-muted\">\n                Abiertos\n              </button>\n            </li>\n\n            <li uk-filter-control=\"[status='ClosingRequested']\">\n              <button\n                style={{ backgroundColor: \"orange\", color: \"white\" }}\n                className=\"uk-button uk-button-muted\">\n                Validar\n              </button>\n            </li>\n\n            <li uk-filter-control=\"[status='Closed']\">\n              <button\n                style={{ backgroundColor: \"green\", color: \"white\" }}\n                className=\"uk-button uk-button-muted\">\n                Cerrados\n              </button>\n\n            </li>\n          </ul>\n\n          {/* Layout items */}\n          <section\n            className=\"js-filter \n            uk-grid\n          \n            uk-flex-wrap-around\n            \n            uk-child-width-1-1 \n            uk-child-width-1-2@s \n            uk-child-width-1-3@m\"\n            uk-scrollspy=\"cls: uk-animation-fade; target: .uk-card; delay: 100; repeat: false\">\n\n            {Array.isArray(this.state.tickets) && this.state.tickets.length\n              ? this.state.tickets.map((ticket) => {\n                  return (\n                    \n                    <section\n                      key={ticket._id}\n                      status={ticket.status}\n                      className=\"\n                      uk-card  \n                      \"\n                    >\n                      <TicketCard\n                        key={ticket._id}\n                        ticketId = {ticket._id}\n                        status={ticket.status}\n                        tenantCode={ticket.tenantCode}\n                        tecnicianName={ticket.tecnicianUser ? ticket.tecnicianUser.name : \"\"}\n                        user={`${ticket.clientUser.name} ${ticket.clientUser.lastName} (${ticket.clientUser.email})`}\n                        reportDate={ticket.reportDate}\n                        description={ticket.issueDescription}\n                        activities={ticket.activities}\n                        internalNotes={ticket.internalNotes}\n                        closedDate={ticket.closedDate}\n                        clientComments={ticket.clientComments}\n                      />\n                    </section>\n                  );\n                })\n              : null}\n          </section>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport NavBar from \"./Navbar\";\nimport TenantsContainer from \"./TenantsContainer\";\nimport TicketsContainer from \"./TicketsContainer\";\nimport AppContext from \"../AppContext\";\n\nexport default class Home extends Component {\n  static contextType = AppContext;\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/home/tenants\" component={TenantsContainer} />\n          <Route exact path=\"/home/tickets\" component={TicketsContainer} />\n          <Route\n            exact\n            path=\"/home/tickets/:tenantId\"\n            component={TicketsContainer}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Login from \"./components/Login\";\r\nimport Home from './components/Home';\r\n\r\nconst Routes = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Login} />\r\n    <Route exact path=\"/home/*\" component={Home} />  \r\n  </Switch>\r\n);\r\n\r\nexport default Routes;","import Routes from \"./Routes\";\nimport { withRouter } from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport AppContext from './AppContext';\nimport \"./App.css\";\nimport { logout } from \"./services/loginService\";\nimport {\n  postNewTicket,\n  patchTecnicianName,\n  postNewActivity,\n  patchTicketStatus,\n} from \"./services/ticketsService\";\n\nclass App extends Component {\n  state = {\n    currentUser: JSON.parse(localStorage.getItem(\"currentUser\")) || {},\n    lastUpdate: {},\n  };\n\n  setUser = (user) => {\n    console.log(\"SetUser\", user);\n    localStorage.setItem(\"currentUser\", JSON.stringify(user));\n    this.setState({ currentUser: user });\n  };\n\n  removeUser = () => {\n    localStorage.removeItem(\"currentUser\");\n    this.setState({ currentUser: {} });\n    logout();\n    const { history } = this.props;\n    history.push(\"/\");\n  };\n\n  createTicket = (issueDescription, tenantId) => {\n    const { currentUser } = this.state;\n    // Armar el objeto del ticket\n    const ticket = {\n      status: \"Open\",\n      tenant: tenantId,\n      clientUser: currentUser._id,\n      issueDescription: issueDescription,\n      reportDate: new Date(),\n    };\n    // Crearlo con el service\n    postNewTicket(ticket)\n      .then((resp) => this.setState({ lastUpdate: Date() }))\n      .catch((reason) => console.log(\"Error: \", reason));\n  };\n\n  assignTecnician = (ticketId) => {\n    const { currentUser } = this.state;\n    // Armar el objeto del ticket\n    const ticket = {\n      _id: ticketId,\n      tecnicianUser: currentUser._id,\n    };\n    // Crearlo con el service\n    patchTecnicianName(ticket)\n      .then((resp) => console.log(resp))\n      .catch((reason) => console.log(\"Error: \", reason));\n  };\n\n  addActivity = (ticketId, activity) => {\n    postNewActivity(ticketId, activity)\n      .then((resp) => {\n        console.log(resp);\n        const now = new Date();\n        this.setState({ lastUpdate: now });\n      })\n      .catch((reason) => console.log(\"Error: \", reason));\n  };\n\n  updateTicketStatus = (ticketId, status) => {\n    console.log(\"TicketID, newStatus\", ticketId, status);\n    patchTicketStatus(ticketId, status)\n      .then((resp) => {\n        console.log(resp);\n        const now = new Date();\n        this.setState({ lastUpdate: now });\n      })\n      .catch((reason) => console.log(\"Error: \", reason));\n  };\n\n  componentDidMount() {\n    const { history } = this.props;\n    const { _id, role, tenant } = this.state.currentUser;\n    if (!_id) {\n      history.push(\"/\");\n    } else {\n      if ([\"Admin\", \"Tecnician\"].includes(role)) {\n        history.push(\"/home/tenants\");\n      } else {\n        history.push(`/home/tickets/${tenant._id}`);\n      }\n    }\n  }\n\n  render() {\n    const {\n      state,\n      setUser,\n      removeUser,\n      createTicket,\n      assignTecnician,\n      addActivity,\n      updateTicketStatus,\n    } = this;\n    return (\n      <AppContext.Provider\n        value={{\n          ...state,\n          setUser,\n          removeUser,\n          createTicket,\n          assignTecnician,\n          addActivity,\n          updateTicketStatus,\n        }}\n      >\n        <Routes />\n      </AppContext.Provider>\n    );\n  }\n}\n\n\n\nconst AppWithRouter = withRouter(App);\n\nexport default AppWithRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport UIkit from \"uikit\"\nimport \"uikit/dist/css/uikit.min.css\"\nimport Icons from \"uikit/dist/js/uikit-icons\"\nUIkit.use(Icons)\n\nconst WithRouter = () => (\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  );\n\nReactDOM.render(\n    <WithRouter/>, \n    document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}